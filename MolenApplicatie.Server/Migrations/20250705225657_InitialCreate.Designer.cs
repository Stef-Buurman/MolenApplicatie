// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MolenApplicatie.Server.Data;

#nullable disable

namespace MolenApplicatie.Server.Migrations
{
    [DbContext(typeof(MolenDbContext))]
    [Migration("20250705225657_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MolenApplicatie.Server.Models.MariaDB.AddedImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("CanBeDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("DateTaken")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("MolenDataId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("MolenDataId");

                    b.ToTable("added_image");
                });

            modelBuilder.Entity("MolenApplicatie.Server.Models.MariaDB.DisappearedYearInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("MolenDataId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Status_after")
                        .HasColumnType("longtext");

                    b.Property<string>("Status_before")
                        .HasColumnType("longtext");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MolenDataId");

                    b.ToTable("disappeared_year_info");
                });

            modelBuilder.Entity("MolenApplicatie.Server.Models.MariaDB.LastSearchedForNewData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("LastSearched")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("last_searched_for_new_data");
                });

            modelBuilder.Entity("MolenApplicatie.Server.Models.MariaDB.MolenData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Adres")
                        .HasColumnType("longtext");

                    b.Property<string>("AfkomstigVan")
                        .HasColumnType("longtext");

                    b.Property<string>("As")
                        .HasColumnType("longtext");

                    b.Property<string>("BedieningKruiwerk")
                        .HasColumnType("longtext");

                    b.Property<string>("Bedrijfsvaardigheid")
                        .HasColumnType("longtext");

                    b.Property<string>("Bijzonderheden")
                        .HasColumnType("longtext");

                    b.Property<string>("Bouwbestek")
                        .HasColumnType("longtext");

                    b.Property<int?>("Bouwjaar")
                        .HasColumnType("int");

                    b.Property<int?>("BouwjaarEinde")
                        .HasColumnType("int");

                    b.Property<int?>("BouwjaarStart")
                        .HasColumnType("int");

                    b.Property<bool>("CanAddImages")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Doel")
                        .HasColumnType("longtext");

                    b.Property<string>("Eigenaar")
                        .HasColumnType("longtext");

                    b.Property<string>("Eigendomshistorie")
                        .HasColumnType("longtext");

                    b.Property<string>("Functie")
                        .HasColumnType("longtext");

                    b.Property<string>("Gemeente")
                        .HasColumnType("longtext");

                    b.Property<string>("Geschiedenis")
                        .HasColumnType("longtext");

                    b.Property<string>("HerbouwdJaar")
                        .HasColumnType("longtext");

                    b.Property<string>("KadastraleAanduiding")
                        .HasColumnType("longtext");

                    b.Property<string>("Krachtbron")
                        .HasColumnType("longtext");

                    b.Property<string>("Kruiwerk")
                        .HasColumnType("longtext");

                    b.Property<string>("LandschappelijkeWaarde")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("Latitude")
                        .HasColumnType("double");

                    b.Property<string>("Literatuur")
                        .HasColumnType("longtext");

                    b.Property<double>("Longitude")
                        .HasColumnType("double");

                    b.Property<Guid>("MolenTBNId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Molenaar")
                        .HasColumnType("longtext");

                    b.Property<string>("Molenerf")
                        .HasColumnType("longtext");

                    b.Property<string>("Monument")
                        .HasColumnType("longtext");

                    b.Property<string>("Museuminformatie")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("OpenOpAfspraak")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("OpenOpZaterdag")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("OpenOpZondag")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("OpenVoorPubliek")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Openingstijden")
                        .HasColumnType("longtext");

                    b.Property<string>("Opvolger")
                        .HasColumnType("longtext");

                    b.Property<string>("Plaats")
                        .HasColumnType("longtext");

                    b.Property<string>("PlaatsBediening")
                        .HasColumnType("longtext");

                    b.Property<string>("PlaatsKruiwerk")
                        .HasColumnType("longtext");

                    b.Property<string>("Plaatsaanduiding")
                        .HasColumnType("longtext");

                    b.Property<string>("PlaatsenVoorheen")
                        .HasColumnType("longtext");

                    b.Property<string>("Provincie")
                        .HasColumnType("longtext");

                    b.Property<string>("Rad")
                        .HasColumnType("longtext");

                    b.Property<string>("RadDiameter")
                        .HasColumnType("longtext");

                    b.Property<string>("RecenteWerkzaamheden")
                        .HasColumnType("longtext");

                    b.Property<string>("Streek")
                        .HasColumnType("longtext");

                    b.Property<string>("Ten_Brugge_Nr")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Toegangsprijzen")
                        .HasColumnType("longtext");

                    b.Property<string>("ToelichtingNaam")
                        .HasColumnType("longtext");

                    b.Property<string>("Toestand")
                        .HasColumnType("longtext");

                    b.Property<string>("Trivia")
                        .HasColumnType("longtext");

                    b.Property<string>("UniekeEigenschap")
                        .HasColumnType("longtext");

                    b.Property<string>("VerplaatstNaar")
                        .HasColumnType("longtext");

                    b.Property<string>("Vlucht")
                        .HasColumnType("longtext");

                    b.Property<string>("Voorganger")
                        .HasColumnType("longtext");

                    b.Property<string>("Wateras")
                        .HasColumnType("longtext");

                    b.Property<string>("Website")
                        .HasColumnType("longtext");

                    b.Property<string>("Wederopbouw")
                        .HasColumnType("longtext");

                    b.Property<string>("Wetenswaardigheden")
                        .HasColumnType("longtext");

                    b.Property<string>("WiekVerbeteringen")
                        .HasColumnType("longtext");

                    b.Property<string>("Wieken")
                        .HasColumnType("longtext");

                    b.Property<string>("Wiekvorm")
                        .HasColumnType("longtext");

                    b.Property<string>("WinkelInformatie")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("MolenTBNId")
                        .IsUnique();

                    b.ToTable("molen_data");
                });

            modelBuilder.Entity("MolenApplicatie.Server.Models.MariaDB.MolenImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("CanBeDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("ExternalUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("MolenDataId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("MolenDataId");

                    b.ToTable("molen_image");
                });

            modelBuilder.Entity("MolenApplicatie.Server.Models.MariaDB.MolenMaker", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("MolenDataId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("MolenDataId");

                    b.ToTable("molen_maker");
                });

            modelBuilder.Entity("MolenApplicatie.Server.Models.MariaDB.MolenTBN", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Ten_Brugge_Nr")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("molen_tbn");
                });

            modelBuilder.Entity("MolenApplicatie.Server.Models.MariaDB.MolenType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("molen_type");
                });

            modelBuilder.Entity("MolenApplicatie.Server.Models.MariaDB.MolenTypeAssociation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("MolenDataId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("MolenTypeId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("MolenDataId");

                    b.HasIndex("MolenTypeId");

                    b.ToTable("molen_type_association");
                });

            modelBuilder.Entity("MolenApplicatie.Server.Models.MariaDB.Place", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Latitude")
                        .HasColumnType("double");

                    b.Property<double>("Longitude")
                        .HasColumnType("double");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("PlaceTypeId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Population")
                        .HasColumnType("int");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("PlaceTypeId");

                    b.ToTable("place");
                });

            modelBuilder.Entity("MolenApplicatie.Server.Models.MariaDB.PlaceType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameMV")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("place_type");
                });

            modelBuilder.Entity("MolenApplicatie.Server.Models.MariaDB.AddedImage", b =>
                {
                    b.HasOne("MolenApplicatie.Server.Models.MariaDB.MolenData", "MolenData")
                        .WithMany("AddedImages")
                        .HasForeignKey("MolenDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MolenData");
                });

            modelBuilder.Entity("MolenApplicatie.Server.Models.MariaDB.DisappearedYearInfo", b =>
                {
                    b.HasOne("MolenApplicatie.Server.Models.MariaDB.MolenData", "MolenData")
                        .WithMany("DisappearedYearInfos")
                        .HasForeignKey("MolenDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MolenData");
                });

            modelBuilder.Entity("MolenApplicatie.Server.Models.MariaDB.MolenData", b =>
                {
                    b.HasOne("MolenApplicatie.Server.Models.MariaDB.MolenTBN", "MolenTBN")
                        .WithOne("MolenData")
                        .HasForeignKey("MolenApplicatie.Server.Models.MariaDB.MolenData", "MolenTBNId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MolenTBN");
                });

            modelBuilder.Entity("MolenApplicatie.Server.Models.MariaDB.MolenImage", b =>
                {
                    b.HasOne("MolenApplicatie.Server.Models.MariaDB.MolenData", "MolenData")
                        .WithMany("Images")
                        .HasForeignKey("MolenDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MolenData");
                });

            modelBuilder.Entity("MolenApplicatie.Server.Models.MariaDB.MolenMaker", b =>
                {
                    b.HasOne("MolenApplicatie.Server.Models.MariaDB.MolenData", "MolenData")
                        .WithMany("MolenMakers")
                        .HasForeignKey("MolenDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MolenData");
                });

            modelBuilder.Entity("MolenApplicatie.Server.Models.MariaDB.MolenTypeAssociation", b =>
                {
                    b.HasOne("MolenApplicatie.Server.Models.MariaDB.MolenData", "MolenData")
                        .WithMany("MolenTypeAssociations")
                        .HasForeignKey("MolenDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MolenApplicatie.Server.Models.MariaDB.MolenType", "MolenType")
                        .WithMany("MolenTypeAssociations")
                        .HasForeignKey("MolenTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MolenData");

                    b.Navigation("MolenType");
                });

            modelBuilder.Entity("MolenApplicatie.Server.Models.MariaDB.Place", b =>
                {
                    b.HasOne("MolenApplicatie.Server.Models.MariaDB.PlaceType", "Type")
                        .WithMany("Places")
                        .HasForeignKey("PlaceTypeId");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("MolenApplicatie.Server.Models.MariaDB.MolenData", b =>
                {
                    b.Navigation("AddedImages");

                    b.Navigation("DisappearedYearInfos");

                    b.Navigation("Images");

                    b.Navigation("MolenMakers");

                    b.Navigation("MolenTypeAssociations");
                });

            modelBuilder.Entity("MolenApplicatie.Server.Models.MariaDB.MolenTBN", b =>
                {
                    b.Navigation("MolenData")
                        .IsRequired();
                });

            modelBuilder.Entity("MolenApplicatie.Server.Models.MariaDB.MolenType", b =>
                {
                    b.Navigation("MolenTypeAssociations");
                });

            modelBuilder.Entity("MolenApplicatie.Server.Models.MariaDB.PlaceType", b =>
                {
                    b.Navigation("Places");
                });
#pragma warning restore 612, 618
        }
    }
}
